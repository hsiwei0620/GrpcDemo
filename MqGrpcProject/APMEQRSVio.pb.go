// Code generated by protoc-gen-go. DO NOT EDIT.
// source: APMEQRSVio.proto

package MqGrpcProject

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type APMEQRSVA struct {
	Lotid                string   `protobuf:"bytes,1,opt,name=lotid,proto3" json:"lotid,omitempty"`
	Nxopeno              string   `protobuf:"bytes,2,opt,name=nxopeno,proto3" json:"nxopeno,omitempty"`
	Nxopeid              string   `protobuf:"bytes,3,opt,name=nxopeid,proto3" json:"nxopeid,omitempty"`
	Nxopever             string   `protobuf:"bytes,4,opt,name=nxopever,proto3" json:"nxopever,omitempty"`
	Spltid               string   `protobuf:"bytes,5,opt,name=spltid,proto3" json:"spltid,omitempty"`
	Resveqptid           string   `protobuf:"bytes,6,opt,name=resveqptid,proto3" json:"resveqptid,omitempty"`
	Lotstat              string   `protobuf:"bytes,7,opt,name=lotstat,proto3" json:"lotstat,omitempty"`
	Resvdate             string   `protobuf:"bytes,8,opt,name=resvdate,proto3" json:"resvdate,omitempty"`
	Resvshiftseq         string   `protobuf:"bytes,9,opt,name=resvshiftseq,proto3" json:"resvshiftseq,omitempty"`
	Resvcomment          string   `protobuf:"bytes,10,opt,name=resvcomment,proto3" json:"resvcomment,omitempty"`
	Planoptweight        string   `protobuf:"bytes,11,opt,name=planoptweight,proto3" json:"planoptweight,omitempty"`
	Moveoutweight        string   `protobuf:"bytes,12,opt,name=moveoutweight,proto3" json:"moveoutweight,omitempty"`
	Shtcnt               string   `protobuf:"bytes,13,opt,name=shtcnt,proto3" json:"shtcnt,omitempty"`
	Crshtcnt             string   `protobuf:"bytes,14,opt,name=crshtcnt,proto3" json:"crshtcnt,omitempty"`
	Runflag              string   `protobuf:"bytes,15,opt,name=runflag,proto3" json:"runflag,omitempty"`
	Productid            string   `protobuf:"bytes,16,opt,name=productid,proto3" json:"productid,omitempty"`
	Eccode               string   `protobuf:"bytes,17,opt,name=eccode,proto3" json:"eccode,omitempty"`
	Routeid              string   `protobuf:"bytes,18,opt,name=routeid,proto3" json:"routeid,omitempty"`
	Routever             string   `protobuf:"bytes,19,opt,name=routever,proto3" json:"routever,omitempty"`
	Cropeno              string   `protobuf:"bytes,20,opt,name=cropeno,proto3" json:"cropeno,omitempty"`
	Recipeid             string   `protobuf:"bytes,21,opt,name=recipeid,proto3" json:"recipeid,omitempty"`
	Inshtcnt             string   `protobuf:"bytes,22,opt,name=inshtcnt,proto3" json:"inshtcnt,omitempty"`
	Stdldtime            string   `protobuf:"bytes,23,opt,name=stdldtime,proto3" json:"stdldtime,omitempty"`
	Manopetime           string   `protobuf:"bytes,24,opt,name=manopetime,proto3" json:"manopetime,omitempty"`
	Piece                string   `protobuf:"bytes,25,opt,name=piece,proto3" json:"piece,omitempty"`
	Openoflag            string   `protobuf:"bytes,26,opt,name=openoflag,proto3" json:"openoflag,omitempty"`
	Key                  string   `protobuf:"bytes,27,opt,name=key,proto3" json:"key,omitempty"`
	Type                 string   `protobuf:"bytes,28,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *APMEQRSVA) Reset()         { *m = APMEQRSVA{} }
func (m *APMEQRSVA) String() string { return proto.CompactTextString(m) }
func (*APMEQRSVA) ProtoMessage()    {}
func (*APMEQRSVA) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe233a13bdc72129, []int{0}
}

func (m *APMEQRSVA) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_APMEQRSVA.Unmarshal(m, b)
}
func (m *APMEQRSVA) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_APMEQRSVA.Marshal(b, m, deterministic)
}
func (m *APMEQRSVA) XXX_Merge(src proto.Message) {
	xxx_messageInfo_APMEQRSVA.Merge(m, src)
}
func (m *APMEQRSVA) XXX_Size() int {
	return xxx_messageInfo_APMEQRSVA.Size(m)
}
func (m *APMEQRSVA) XXX_DiscardUnknown() {
	xxx_messageInfo_APMEQRSVA.DiscardUnknown(m)
}

var xxx_messageInfo_APMEQRSVA proto.InternalMessageInfo

func (m *APMEQRSVA) GetLotid() string {
	if m != nil {
		return m.Lotid
	}
	return ""
}

func (m *APMEQRSVA) GetNxopeno() string {
	if m != nil {
		return m.Nxopeno
	}
	return ""
}

func (m *APMEQRSVA) GetNxopeid() string {
	if m != nil {
		return m.Nxopeid
	}
	return ""
}

func (m *APMEQRSVA) GetNxopever() string {
	if m != nil {
		return m.Nxopever
	}
	return ""
}

func (m *APMEQRSVA) GetSpltid() string {
	if m != nil {
		return m.Spltid
	}
	return ""
}

func (m *APMEQRSVA) GetResveqptid() string {
	if m != nil {
		return m.Resveqptid
	}
	return ""
}

func (m *APMEQRSVA) GetLotstat() string {
	if m != nil {
		return m.Lotstat
	}
	return ""
}

func (m *APMEQRSVA) GetResvdate() string {
	if m != nil {
		return m.Resvdate
	}
	return ""
}

func (m *APMEQRSVA) GetResvshiftseq() string {
	if m != nil {
		return m.Resvshiftseq
	}
	return ""
}

func (m *APMEQRSVA) GetResvcomment() string {
	if m != nil {
		return m.Resvcomment
	}
	return ""
}

func (m *APMEQRSVA) GetPlanoptweight() string {
	if m != nil {
		return m.Planoptweight
	}
	return ""
}

func (m *APMEQRSVA) GetMoveoutweight() string {
	if m != nil {
		return m.Moveoutweight
	}
	return ""
}

func (m *APMEQRSVA) GetShtcnt() string {
	if m != nil {
		return m.Shtcnt
	}
	return ""
}

func (m *APMEQRSVA) GetCrshtcnt() string {
	if m != nil {
		return m.Crshtcnt
	}
	return ""
}

func (m *APMEQRSVA) GetRunflag() string {
	if m != nil {
		return m.Runflag
	}
	return ""
}

func (m *APMEQRSVA) GetProductid() string {
	if m != nil {
		return m.Productid
	}
	return ""
}

func (m *APMEQRSVA) GetEccode() string {
	if m != nil {
		return m.Eccode
	}
	return ""
}

func (m *APMEQRSVA) GetRouteid() string {
	if m != nil {
		return m.Routeid
	}
	return ""
}

func (m *APMEQRSVA) GetRoutever() string {
	if m != nil {
		return m.Routever
	}
	return ""
}

func (m *APMEQRSVA) GetCropeno() string {
	if m != nil {
		return m.Cropeno
	}
	return ""
}

func (m *APMEQRSVA) GetRecipeid() string {
	if m != nil {
		return m.Recipeid
	}
	return ""
}

func (m *APMEQRSVA) GetInshtcnt() string {
	if m != nil {
		return m.Inshtcnt
	}
	return ""
}

func (m *APMEQRSVA) GetStdldtime() string {
	if m != nil {
		return m.Stdldtime
	}
	return ""
}

func (m *APMEQRSVA) GetManopetime() string {
	if m != nil {
		return m.Manopetime
	}
	return ""
}

func (m *APMEQRSVA) GetPiece() string {
	if m != nil {
		return m.Piece
	}
	return ""
}

func (m *APMEQRSVA) GetOpenoflag() string {
	if m != nil {
		return m.Openoflag
	}
	return ""
}

func (m *APMEQRSVA) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *APMEQRSVA) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

// The request message containing the user's name.
type APMEQRSV_Request struct {
	Actiontype           string       `protobuf:"bytes,1,opt,name=actiontype,proto3" json:"actiontype,omitempty"`
	Fabid                string       `protobuf:"bytes,2,opt,name=fabid,proto3" json:"fabid,omitempty"`
	Bayid                string       `protobuf:"bytes,3,opt,name=bayid,proto3" json:"bayid,omitempty"`
	Resveqptid           string       `protobuf:"bytes,4,opt,name=resveqptid,proto3" json:"resveqptid,omitempty"`
	Clmuser              string       `protobuf:"bytes,5,opt,name=clmuser,proto3" json:"clmuser,omitempty"`
	Lotid                string       `protobuf:"bytes,6,opt,name=lotid,proto3" json:"lotid,omitempty"`
	Crshtcntflg          string       `protobuf:"bytes,7,opt,name=crshtcntflg,proto3" json:"crshtcntflg,omitempty"`
	Onlyresvflg          string       `protobuf:"bytes,8,opt,name=onlyresvflg,proto3" json:"onlyresvflg,omitempty"`
	Onlyoutusideflg      string       `protobuf:"bytes,9,opt,name=onlyoutusideflg,proto3" json:"onlyoutusideflg,omitempty"`
	Lotarycnt            string       `protobuf:"bytes,10,opt,name=lotarycnt,proto3" json:"lotarycnt,omitempty"`
	Iary                 []*APMEQRSVA `protobuf:"bytes,11,rep,name=iary,proto3" json:"iary,omitempty"`
	Serverip             string       `protobuf:"bytes,12,opt,name=serverip,proto3" json:"serverip,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *APMEQRSV_Request) Reset()         { *m = APMEQRSV_Request{} }
func (m *APMEQRSV_Request) String() string { return proto.CompactTextString(m) }
func (*APMEQRSV_Request) ProtoMessage()    {}
func (*APMEQRSV_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe233a13bdc72129, []int{1}
}

func (m *APMEQRSV_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_APMEQRSV_Request.Unmarshal(m, b)
}
func (m *APMEQRSV_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_APMEQRSV_Request.Marshal(b, m, deterministic)
}
func (m *APMEQRSV_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_APMEQRSV_Request.Merge(m, src)
}
func (m *APMEQRSV_Request) XXX_Size() int {
	return xxx_messageInfo_APMEQRSV_Request.Size(m)
}
func (m *APMEQRSV_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_APMEQRSV_Request.DiscardUnknown(m)
}

var xxx_messageInfo_APMEQRSV_Request proto.InternalMessageInfo

func (m *APMEQRSV_Request) GetActiontype() string {
	if m != nil {
		return m.Actiontype
	}
	return ""
}

func (m *APMEQRSV_Request) GetFabid() string {
	if m != nil {
		return m.Fabid
	}
	return ""
}

func (m *APMEQRSV_Request) GetBayid() string {
	if m != nil {
		return m.Bayid
	}
	return ""
}

func (m *APMEQRSV_Request) GetResveqptid() string {
	if m != nil {
		return m.Resveqptid
	}
	return ""
}

func (m *APMEQRSV_Request) GetClmuser() string {
	if m != nil {
		return m.Clmuser
	}
	return ""
}

func (m *APMEQRSV_Request) GetLotid() string {
	if m != nil {
		return m.Lotid
	}
	return ""
}

func (m *APMEQRSV_Request) GetCrshtcntflg() string {
	if m != nil {
		return m.Crshtcntflg
	}
	return ""
}

func (m *APMEQRSV_Request) GetOnlyresvflg() string {
	if m != nil {
		return m.Onlyresvflg
	}
	return ""
}

func (m *APMEQRSV_Request) GetOnlyoutusideflg() string {
	if m != nil {
		return m.Onlyoutusideflg
	}
	return ""
}

func (m *APMEQRSV_Request) GetLotarycnt() string {
	if m != nil {
		return m.Lotarycnt
	}
	return ""
}

func (m *APMEQRSV_Request) GetIary() []*APMEQRSVA {
	if m != nil {
		return m.Iary
	}
	return nil
}

func (m *APMEQRSV_Request) GetServerip() string {
	if m != nil {
		return m.Serverip
	}
	return ""
}

// The response message containing the greetings
type APMEQRSV_Reply struct {
	// string result = 1;
	Trxid                string         `protobuf:"bytes,1,opt,name=trxid,proto3" json:"trxid,omitempty"`
	Typeid               string         `protobuf:"bytes,2,opt,name=typeid,proto3" json:"typeid,omitempty"`
	Rtncode              string         `protobuf:"bytes,3,opt,name=rtncode,proto3" json:"rtncode,omitempty"`
	Rtnmesg              string         `protobuf:"bytes,4,opt,name=rtnmesg,proto3" json:"rtnmesg,omitempty"`
	Lotarycnt            string         `protobuf:"bytes,5,opt,name=lotarycnt,proto3" json:"lotarycnt,omitempty"`
	Oary                 []*APMEQRSVoA1 `protobuf:"bytes,6,rep,name=oary,proto3" json:"oary,omitempty"`
	Norsvcnt             string         `protobuf:"bytes,7,opt,name=norsvcnt,proto3" json:"norsvcnt,omitempty"`
	Oary1                []*APMEQRSVoA2 `protobuf:"bytes,8,rep,name=oary1,proto3" json:"oary1,omitempty"`
	Errmsg               string         `protobuf:"bytes,9,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *APMEQRSV_Reply) Reset()         { *m = APMEQRSV_Reply{} }
func (m *APMEQRSV_Reply) String() string { return proto.CompactTextString(m) }
func (*APMEQRSV_Reply) ProtoMessage()    {}
func (*APMEQRSV_Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe233a13bdc72129, []int{2}
}

func (m *APMEQRSV_Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_APMEQRSV_Reply.Unmarshal(m, b)
}
func (m *APMEQRSV_Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_APMEQRSV_Reply.Marshal(b, m, deterministic)
}
func (m *APMEQRSV_Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_APMEQRSV_Reply.Merge(m, src)
}
func (m *APMEQRSV_Reply) XXX_Size() int {
	return xxx_messageInfo_APMEQRSV_Reply.Size(m)
}
func (m *APMEQRSV_Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_APMEQRSV_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_APMEQRSV_Reply proto.InternalMessageInfo

func (m *APMEQRSV_Reply) GetTrxid() string {
	if m != nil {
		return m.Trxid
	}
	return ""
}

func (m *APMEQRSV_Reply) GetTypeid() string {
	if m != nil {
		return m.Typeid
	}
	return ""
}

func (m *APMEQRSV_Reply) GetRtncode() string {
	if m != nil {
		return m.Rtncode
	}
	return ""
}

func (m *APMEQRSV_Reply) GetRtnmesg() string {
	if m != nil {
		return m.Rtnmesg
	}
	return ""
}

func (m *APMEQRSV_Reply) GetLotarycnt() string {
	if m != nil {
		return m.Lotarycnt
	}
	return ""
}

func (m *APMEQRSV_Reply) GetOary() []*APMEQRSVoA1 {
	if m != nil {
		return m.Oary
	}
	return nil
}

func (m *APMEQRSV_Reply) GetNorsvcnt() string {
	if m != nil {
		return m.Norsvcnt
	}
	return ""
}

func (m *APMEQRSV_Reply) GetOary1() []*APMEQRSVoA2 {
	if m != nil {
		return m.Oary1
	}
	return nil
}

func (m *APMEQRSV_Reply) GetErrmsg() string {
	if m != nil {
		return m.Errmsg
	}
	return ""
}

type APMEQRSVoA1 struct {
	Lotid                string   `protobuf:"bytes,1,opt,name=lotid,proto3" json:"lotid,omitempty"`
	Nxopeno              string   `protobuf:"bytes,2,opt,name=nxopeno,proto3" json:"nxopeno,omitempty"`
	Nxopeid              string   `protobuf:"bytes,3,opt,name=nxopeid,proto3" json:"nxopeid,omitempty"`
	Nxopever             string   `protobuf:"bytes,4,opt,name=nxopever,proto3" json:"nxopever,omitempty"`
	Spltid               string   `protobuf:"bytes,5,opt,name=spltid,proto3" json:"spltid,omitempty"`
	Resveqptid           string   `protobuf:"bytes,6,opt,name=resveqptid,proto3" json:"resveqptid,omitempty"`
	Lotstat              string   `protobuf:"bytes,7,opt,name=lotstat,proto3" json:"lotstat,omitempty"`
	Resvdate             string   `protobuf:"bytes,8,opt,name=resvdate,proto3" json:"resvdate,omitempty"`
	Resvshiftseq         string   `protobuf:"bytes,9,opt,name=resvshiftseq,proto3" json:"resvshiftseq,omitempty"`
	Resvcomment          string   `protobuf:"bytes,10,opt,name=resvcomment,proto3" json:"resvcomment,omitempty"`
	Planoptweight        string   `protobuf:"bytes,11,opt,name=planoptweight,proto3" json:"planoptweight,omitempty"`
	Moveoutweight        string   `protobuf:"bytes,12,opt,name=moveoutweight,proto3" json:"moveoutweight,omitempty"`
	Shtcnt               string   `protobuf:"bytes,13,opt,name=shtcnt,proto3" json:"shtcnt,omitempty"`
	Crshtcnt             string   `protobuf:"bytes,14,opt,name=crshtcnt,proto3" json:"crshtcnt,omitempty"`
	Runflag              string   `protobuf:"bytes,15,opt,name=runflag,proto3" json:"runflag,omitempty"`
	Productid            string   `protobuf:"bytes,16,opt,name=productid,proto3" json:"productid,omitempty"`
	Eccode               string   `protobuf:"bytes,17,opt,name=eccode,proto3" json:"eccode,omitempty"`
	Routeid              string   `protobuf:"bytes,18,opt,name=routeid,proto3" json:"routeid,omitempty"`
	Routever             string   `protobuf:"bytes,19,opt,name=routever,proto3" json:"routever,omitempty"`
	Cropeno              string   `protobuf:"bytes,20,opt,name=cropeno,proto3" json:"cropeno,omitempty"`
	Recipeid             string   `protobuf:"bytes,21,opt,name=recipeid,proto3" json:"recipeid,omitempty"`
	Inshtcnt             string   `protobuf:"bytes,22,opt,name=inshtcnt,proto3" json:"inshtcnt,omitempty"`
	Stdldtime            string   `protobuf:"bytes,23,opt,name=stdldtime,proto3" json:"stdldtime,omitempty"`
	Manopetime           string   `protobuf:"bytes,24,opt,name=manopetime,proto3" json:"manopetime,omitempty"`
	Piece                string   `protobuf:"bytes,25,opt,name=piece,proto3" json:"piece,omitempty"`
	Openoflag            string   `protobuf:"bytes,26,opt,name=openoflag,proto3" json:"openoflag,omitempty"`
	Key                  string   `protobuf:"bytes,27,opt,name=key,proto3" json:"key,omitempty"`
	Type                 string   `protobuf:"bytes,28,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *APMEQRSVoA1) Reset()         { *m = APMEQRSVoA1{} }
func (m *APMEQRSVoA1) String() string { return proto.CompactTextString(m) }
func (*APMEQRSVoA1) ProtoMessage()    {}
func (*APMEQRSVoA1) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe233a13bdc72129, []int{3}
}

func (m *APMEQRSVoA1) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_APMEQRSVoA1.Unmarshal(m, b)
}
func (m *APMEQRSVoA1) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_APMEQRSVoA1.Marshal(b, m, deterministic)
}
func (m *APMEQRSVoA1) XXX_Merge(src proto.Message) {
	xxx_messageInfo_APMEQRSVoA1.Merge(m, src)
}
func (m *APMEQRSVoA1) XXX_Size() int {
	return xxx_messageInfo_APMEQRSVoA1.Size(m)
}
func (m *APMEQRSVoA1) XXX_DiscardUnknown() {
	xxx_messageInfo_APMEQRSVoA1.DiscardUnknown(m)
}

var xxx_messageInfo_APMEQRSVoA1 proto.InternalMessageInfo

func (m *APMEQRSVoA1) GetLotid() string {
	if m != nil {
		return m.Lotid
	}
	return ""
}

func (m *APMEQRSVoA1) GetNxopeno() string {
	if m != nil {
		return m.Nxopeno
	}
	return ""
}

func (m *APMEQRSVoA1) GetNxopeid() string {
	if m != nil {
		return m.Nxopeid
	}
	return ""
}

func (m *APMEQRSVoA1) GetNxopever() string {
	if m != nil {
		return m.Nxopever
	}
	return ""
}

func (m *APMEQRSVoA1) GetSpltid() string {
	if m != nil {
		return m.Spltid
	}
	return ""
}

func (m *APMEQRSVoA1) GetResveqptid() string {
	if m != nil {
		return m.Resveqptid
	}
	return ""
}

func (m *APMEQRSVoA1) GetLotstat() string {
	if m != nil {
		return m.Lotstat
	}
	return ""
}

func (m *APMEQRSVoA1) GetResvdate() string {
	if m != nil {
		return m.Resvdate
	}
	return ""
}

func (m *APMEQRSVoA1) GetResvshiftseq() string {
	if m != nil {
		return m.Resvshiftseq
	}
	return ""
}

func (m *APMEQRSVoA1) GetResvcomment() string {
	if m != nil {
		return m.Resvcomment
	}
	return ""
}

func (m *APMEQRSVoA1) GetPlanoptweight() string {
	if m != nil {
		return m.Planoptweight
	}
	return ""
}

func (m *APMEQRSVoA1) GetMoveoutweight() string {
	if m != nil {
		return m.Moveoutweight
	}
	return ""
}

func (m *APMEQRSVoA1) GetShtcnt() string {
	if m != nil {
		return m.Shtcnt
	}
	return ""
}

func (m *APMEQRSVoA1) GetCrshtcnt() string {
	if m != nil {
		return m.Crshtcnt
	}
	return ""
}

func (m *APMEQRSVoA1) GetRunflag() string {
	if m != nil {
		return m.Runflag
	}
	return ""
}

func (m *APMEQRSVoA1) GetProductid() string {
	if m != nil {
		return m.Productid
	}
	return ""
}

func (m *APMEQRSVoA1) GetEccode() string {
	if m != nil {
		return m.Eccode
	}
	return ""
}

func (m *APMEQRSVoA1) GetRouteid() string {
	if m != nil {
		return m.Routeid
	}
	return ""
}

func (m *APMEQRSVoA1) GetRoutever() string {
	if m != nil {
		return m.Routever
	}
	return ""
}

func (m *APMEQRSVoA1) GetCropeno() string {
	if m != nil {
		return m.Cropeno
	}
	return ""
}

func (m *APMEQRSVoA1) GetRecipeid() string {
	if m != nil {
		return m.Recipeid
	}
	return ""
}

func (m *APMEQRSVoA1) GetInshtcnt() string {
	if m != nil {
		return m.Inshtcnt
	}
	return ""
}

func (m *APMEQRSVoA1) GetStdldtime() string {
	if m != nil {
		return m.Stdldtime
	}
	return ""
}

func (m *APMEQRSVoA1) GetManopetime() string {
	if m != nil {
		return m.Manopetime
	}
	return ""
}

func (m *APMEQRSVoA1) GetPiece() string {
	if m != nil {
		return m.Piece
	}
	return ""
}

func (m *APMEQRSVoA1) GetOpenoflag() string {
	if m != nil {
		return m.Openoflag
	}
	return ""
}

func (m *APMEQRSVoA1) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *APMEQRSVoA1) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type APMEQRSVoA2 struct {
	Lotid                string   `protobuf:"bytes,1,opt,name=lotid,proto3" json:"lotid,omitempty"`
	Productid            string   `protobuf:"bytes,2,opt,name=productid,proto3" json:"productid,omitempty"`
	Eccode               string   `protobuf:"bytes,3,opt,name=eccode,proto3" json:"eccode,omitempty"`
	Planoptweight        string   `protobuf:"bytes,4,opt,name=planoptweight,proto3" json:"planoptweight,omitempty"`
	Shtcnt               string   `protobuf:"bytes,5,opt,name=shtcnt,proto3" json:"shtcnt,omitempty"`
	Routeid              string   `protobuf:"bytes,6,opt,name=routeid,proto3" json:"routeid,omitempty"`
	Routever             string   `protobuf:"bytes,7,opt,name=routever,proto3" json:"routever,omitempty"`
	Cropeno              string   `protobuf:"bytes,8,opt,name=cropeno,proto3" json:"cropeno,omitempty"`
	Nxopeno              string   `protobuf:"bytes,9,opt,name=nxopeno,proto3" json:"nxopeno,omitempty"`
	Nxopeid              string   `protobuf:"bytes,10,opt,name=nxopeid,proto3" json:"nxopeid,omitempty"`
	Nxopever             string   `protobuf:"bytes,11,opt,name=nxopever,proto3" json:"nxopever,omitempty"`
	Openoflag            string   `protobuf:"bytes,12,opt,name=openoflag,proto3" json:"openoflag,omitempty"`
	Stdldtime            string   `protobuf:"bytes,13,opt,name=stdldtime,proto3" json:"stdldtime,omitempty"`
	Manopetime           string   `protobuf:"bytes,14,opt,name=manopetime,proto3" json:"manopetime,omitempty"`
	Type                 string   `protobuf:"bytes,15,opt,name=type,proto3" json:"type,omitempty"`
	Fiteqpts             string   `protobuf:"bytes,16,opt,name=fiteqpts,proto3" json:"fiteqpts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *APMEQRSVoA2) Reset()         { *m = APMEQRSVoA2{} }
func (m *APMEQRSVoA2) String() string { return proto.CompactTextString(m) }
func (*APMEQRSVoA2) ProtoMessage()    {}
func (*APMEQRSVoA2) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe233a13bdc72129, []int{4}
}

func (m *APMEQRSVoA2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_APMEQRSVoA2.Unmarshal(m, b)
}
func (m *APMEQRSVoA2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_APMEQRSVoA2.Marshal(b, m, deterministic)
}
func (m *APMEQRSVoA2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_APMEQRSVoA2.Merge(m, src)
}
func (m *APMEQRSVoA2) XXX_Size() int {
	return xxx_messageInfo_APMEQRSVoA2.Size(m)
}
func (m *APMEQRSVoA2) XXX_DiscardUnknown() {
	xxx_messageInfo_APMEQRSVoA2.DiscardUnknown(m)
}

var xxx_messageInfo_APMEQRSVoA2 proto.InternalMessageInfo

func (m *APMEQRSVoA2) GetLotid() string {
	if m != nil {
		return m.Lotid
	}
	return ""
}

func (m *APMEQRSVoA2) GetProductid() string {
	if m != nil {
		return m.Productid
	}
	return ""
}

func (m *APMEQRSVoA2) GetEccode() string {
	if m != nil {
		return m.Eccode
	}
	return ""
}

func (m *APMEQRSVoA2) GetPlanoptweight() string {
	if m != nil {
		return m.Planoptweight
	}
	return ""
}

func (m *APMEQRSVoA2) GetShtcnt() string {
	if m != nil {
		return m.Shtcnt
	}
	return ""
}

func (m *APMEQRSVoA2) GetRouteid() string {
	if m != nil {
		return m.Routeid
	}
	return ""
}

func (m *APMEQRSVoA2) GetRoutever() string {
	if m != nil {
		return m.Routever
	}
	return ""
}

func (m *APMEQRSVoA2) GetCropeno() string {
	if m != nil {
		return m.Cropeno
	}
	return ""
}

func (m *APMEQRSVoA2) GetNxopeno() string {
	if m != nil {
		return m.Nxopeno
	}
	return ""
}

func (m *APMEQRSVoA2) GetNxopeid() string {
	if m != nil {
		return m.Nxopeid
	}
	return ""
}

func (m *APMEQRSVoA2) GetNxopever() string {
	if m != nil {
		return m.Nxopever
	}
	return ""
}

func (m *APMEQRSVoA2) GetOpenoflag() string {
	if m != nil {
		return m.Openoflag
	}
	return ""
}

func (m *APMEQRSVoA2) GetStdldtime() string {
	if m != nil {
		return m.Stdldtime
	}
	return ""
}

func (m *APMEQRSVoA2) GetManopetime() string {
	if m != nil {
		return m.Manopetime
	}
	return ""
}

func (m *APMEQRSVoA2) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *APMEQRSVoA2) GetFiteqpts() string {
	if m != nil {
		return m.Fiteqpts
	}
	return ""
}

func init() {
	proto.RegisterType((*APMEQRSVA)(nil), "MqGrpcProject.APMEQRSV_a")
	proto.RegisterType((*APMEQRSV_Request)(nil), "MqGrpcProject.APMEQRSV_Request")
	proto.RegisterType((*APMEQRSV_Reply)(nil), "MqGrpcProject.APMEQRSV_Reply")
	proto.RegisterType((*APMEQRSVoA1)(nil), "MqGrpcProject.APMEQRSVo_a1")
	proto.RegisterType((*APMEQRSVoA2)(nil), "MqGrpcProject.APMEQRSVo_a2")
}

func init() { proto.RegisterFile("APMEQRSVio.proto", fileDescriptor_fe233a13bdc72129) }

var fileDescriptor_fe233a13bdc72129 = []byte{
	// 809 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x56, 0x4b, 0x6e, 0x1b, 0x39,
	0x10, 0x85, 0xf5, 0x69, 0x49, 0x94, 0x64, 0x7b, 0x38, 0xb6, 0x87, 0xfe, 0x60, 0x20, 0x08, 0xb3,
	0xf0, 0x66, 0x34, 0xb0, 0x7d, 0x82, 0x31, 0x10, 0x24, 0x8b, 0x18, 0x50, 0x14, 0x20, 0x59, 0x1a,
	0x6d, 0x36, 0x25, 0x33, 0xe9, 0x6e, 0xb6, 0xd8, 0x6c, 0xc5, 0x3a, 0x40, 0xae, 0x10, 0x64, 0x9d,
	0x55, 0x0e, 0x92, 0x83, 0x05, 0x55, 0x64, 0xff, 0x64, 0x2b, 0xb9, 0x80, 0x77, 0x7c, 0xaf, 0xaa,
	0x59, 0xac, 0xcf, 0x2b, 0x34, 0xd9, 0xff, 0x7f, 0x7a, 0xf3, 0xe2, 0xcd, 0xec, 0xed, 0x3b, 0xa9,
	0x26, 0x89, 0x56, 0x46, 0xd1, 0xe1, 0xcd, 0xf2, 0xa5, 0x4e, 0xf8, 0x54, 0xab, 0x0f, 0x82, 0x9b,
	0xf1, 0x17, 0x8f, 0x90, 0xdc, 0xe7, 0xd6, 0xa7, 0x07, 0xa4, 0x1d, 0x2a, 0x23, 0x03, 0xb6, 0x33,
	0xda, 0x39, 0xef, 0xcd, 0x2c, 0xa0, 0x8c, 0x74, 0xe2, 0x07, 0x95, 0x88, 0x58, 0xb1, 0x06, 0xf2,
	0x39, 0x2c, 0x2c, 0x32, 0x60, 0xcd, 0x8a, 0x45, 0x06, 0xf4, 0x84, 0x74, 0xf1, 0xb8, 0x12, 0x9a,
	0xb5, 0xd0, 0x54, 0x60, 0x7a, 0x44, 0xbc, 0x34, 0x09, 0x21, 0x4c, 0x1b, 0x2d, 0x0e, 0xd1, 0xbf,
	0x09, 0xd1, 0x22, 0x5d, 0x89, 0x65, 0x02, 0x36, 0x0f, 0x6d, 0x15, 0x06, 0xa2, 0x85, 0xca, 0xa4,
	0xc6, 0x37, 0xac, 0x63, 0xa3, 0x39, 0x08, 0xd1, 0xc0, 0x2f, 0xf0, 0x8d, 0x60, 0x5d, 0x1b, 0x2d,
	0xc7, 0x74, 0x4c, 0x06, 0x70, 0x4e, 0xef, 0xe5, 0xdc, 0xa4, 0x62, 0xc9, 0x7a, 0x68, 0xaf, 0x71,
	0x74, 0x44, 0xfa, 0x80, 0xb9, 0x8a, 0x22, 0x11, 0x1b, 0x46, 0xd0, 0xa5, 0x4a, 0xd1, 0x7f, 0xc8,
	0x30, 0x09, 0xfd, 0x58, 0x25, 0xe6, 0x93, 0x90, 0x8b, 0x7b, 0xc3, 0xfa, 0xe8, 0x53, 0x27, 0xc1,
	0x2b, 0x52, 0x2b, 0xa1, 0xb2, 0xdc, 0x6b, 0x60, 0xbd, 0x6a, 0x24, 0xe6, 0x7f, 0x6f, 0x78, 0x6c,
	0xd8, 0xd0, 0xe5, 0x8f, 0x08, 0xb2, 0xe0, 0xda, 0x59, 0x76, 0x6d, 0x16, 0x39, 0x86, 0xdc, 0x75,
	0x16, 0xcf, 0x43, 0x7f, 0xc1, 0xf6, 0x6c, 0xee, 0x0e, 0xd2, 0x33, 0xd2, 0x4b, 0xb4, 0x0a, 0x32,
	0x0e, 0x45, 0xdb, 0x47, 0x5b, 0x49, 0x40, 0x2c, 0xc1, 0xb9, 0x0a, 0x04, 0xfb, 0xc3, 0xc6, 0xb2,
	0x08, 0xef, 0x53, 0x99, 0x81, 0xce, 0x51, 0x77, 0x9f, 0x85, 0x58, 0x4b, 0x38, 0x42, 0xe7, 0xfe,
	0x74, 0xb5, 0x74, 0x18, 0xbe, 0xe2, 0xda, 0x4e, 0xc2, 0x81, 0xfd, 0xca, 0x41, 0xdb, 0x01, 0x2e,
	0x71, 0x14, 0x0e, 0xf3, 0x0e, 0x58, 0x0c, 0x36, 0x19, 0xbb, 0xbc, 0x8e, 0xac, 0x2d, 0xc7, 0xf0,
	0xfa, 0xd4, 0x04, 0x61, 0x60, 0x64, 0x24, 0xd8, 0x5f, 0xf6, 0xf5, 0x05, 0x01, 0x13, 0x11, 0x41,
	0x7d, 0x05, 0x9a, 0x99, 0x9d, 0x88, 0x92, 0x81, 0x79, 0x4d, 0xa4, 0xe0, 0x82, 0x1d, 0xdb, 0x79,
	0x45, 0x00, 0x77, 0xe2, 0xa3, 0xb0, 0x5a, 0x27, 0xf6, 0xce, 0x82, 0xa0, 0xfb, 0xa4, 0xf9, 0x51,
	0xac, 0xd9, 0x29, 0xf2, 0x70, 0xa4, 0x94, 0xb4, 0xcc, 0x3a, 0x11, 0xec, 0x0c, 0x29, 0x3c, 0x8f,
	0x3f, 0x37, 0x4b, 0xf1, 0xdc, 0xce, 0xc4, 0x32, 0x13, 0xa9, 0x81, 0xe7, 0xf8, 0xdc, 0x48, 0x15,
	0xa3, 0xbb, 0xd5, 0x48, 0x85, 0x81, 0xe7, 0xcc, 0xfd, 0x3b, 0x19, 0x38, 0x99, 0x58, 0x00, 0xec,
	0x9d, 0xbf, 0x2e, 0x24, 0x62, 0xc1, 0xc6, 0xb0, 0xb7, 0x9e, 0x1a, 0x76, 0x1e, 0x46, 0x59, 0x2a,
	0xb4, 0x53, 0x49, 0x0e, 0x4b, 0x91, 0x7a, 0x55, 0x91, 0x8e, 0x48, 0x3f, 0x1f, 0x96, 0x79, 0xb8,
	0x70, 0x02, 0xa9, 0x52, 0xe0, 0xa1, 0xe2, 0x70, 0x0d, 0x31, 0xc0, 0xc3, 0xea, 0xa4, 0x4a, 0xd1,
	0x73, 0xb2, 0x07, 0x50, 0x65, 0x26, 0x4b, 0x65, 0x20, 0xc0, 0xcb, 0xaa, 0x65, 0x93, 0x86, 0x12,
	0x87, 0xca, 0xf8, 0x7a, 0xcd, 0x0b, 0xb9, 0x94, 0x04, 0xfd, 0x97, 0xb4, 0xa4, 0xaf, 0xd7, 0xac,
	0x3f, 0x6a, 0x9e, 0xf7, 0x2f, 0x8f, 0x27, 0xb5, 0x9d, 0x33, 0x29, 0xf7, 0xcd, 0x0c, 0xdd, 0x60,
	0x3e, 0x52, 0xa1, 0x57, 0x42, 0xcb, 0xc4, 0x09, 0xa6, 0xc0, 0xe3, 0xef, 0x0d, 0xb2, 0x5b, 0xe9,
	0x43, 0x12, 0xae, 0x21, 0x7f, 0xa3, 0x1f, 0xca, 0x25, 0x85, 0x00, 0x06, 0x1d, 0x7a, 0x50, 0x14,
	0xdf, 0x21, 0x1c, 0x74, 0x13, 0xa3, 0x02, 0xdc, 0x8a, 0x72, 0xd0, 0x59, 0x22, 0x91, 0x2e, 0x5c,
	0xf9, 0x73, 0x58, 0xcf, 0xae, 0xbd, 0x99, 0xdd, 0x7f, 0xa4, 0xa5, 0x20, 0x3b, 0x0f, 0xb3, 0x3b,
	0xdd, 0x92, 0x9d, 0xba, 0xf5, 0x2f, 0x66, 0xe8, 0x88, 0xbb, 0x50, 0xe9, 0x74, 0x05, 0xb7, 0x75,
	0xdc, 0x2e, 0x74, 0x98, 0x5e, 0x90, 0x36, 0xf8, 0x5c, 0xb0, 0xee, 0xef, 0x6e, 0xbb, 0x9c, 0x59,
	0x4f, 0x94, 0xb4, 0xd6, 0x51, 0x9a, 0x37, 0xc7, 0xa1, 0xf1, 0x57, 0x8f, 0x0c, 0xaa, 0xd1, 0x9f,
	0xb7, 0xf9, 0xf3, 0x36, 0x7f, 0xde, 0xe6, 0xb8, 0xcd, 0x7f, 0x34, 0x6b, 0xd2, 0xb8, 0xdc, 0x22,
	0x8d, 0x5a, 0xf1, 0x1b, 0xdb, 0x8b, 0xdf, 0xac, 0x15, 0xff, 0xd1, 0x30, 0xb5, 0x9e, 0x1a, 0xa6,
	0x72, 0x4c, 0xda, 0xb5, 0x31, 0xa9, 0xb4, 0xce, 0xdb, 0xde, 0xba, 0xce, 0xf6, 0xd6, 0x75, 0xeb,
	0xad, 0xab, 0xc8, 0xbb, 0xb7, 0x55, 0xde, 0x64, 0xbb, 0xbc, 0xfb, 0x1b, 0xf2, 0xae, 0x95, 0x7f,
	0xb0, 0x59, 0xfe, 0x5a, 0xc3, 0x87, 0xbf, 0x6e, 0xf8, 0xee, 0xa3, 0x86, 0xe7, 0xad, 0xda, 0x2b,
	0x5b, 0x05, 0x6f, 0x99, 0x4b, 0x03, 0x3b, 0x22, 0x75, 0xf3, 0x5f, 0xe0, 0xeb, 0x2b, 0x72, 0x28,
	0xd5, 0x64, 0xa1, 0x13, 0x5e, 0x5f, 0x93, 0xd7, 0xb4, 0x06, 0xa7, 0xf0, 0xa7, 0x3b, 0xdd, 0xf9,
	0xd6, 0x68, 0xbe, 0x7a, 0xfd, 0xfe, 0xce, 0xc3, 0x1f, 0xdf, 0xab, 0x9f, 0x01, 0x00, 0x00, 0xff,
	0xff, 0xa8, 0x9f, 0x84, 0xeb, 0x0c, 0x0b, 0x00, 0x00,
}
